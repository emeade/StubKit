#if !canImport(ObjectiveC)
import XCTest

extension EnumStubTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnumStubTests = [
        ("testEnumKind", testEnumKind),
        ("testEnumKindWithAssocValue", testEnumKindWithAssocValue),
        ("testEnumKindWithEmptyEnum", testEnumKindWithEmptyEnum),
        ("testEnumKindWithGeneric", testEnumKindWithGeneric),
        ("testEnumKindWithRawValue", testEnumKindWithRawValue),
        ("testIsEnum", testIsEnum),
        ("testIsEnumWithAssocValue", testIsEnumWithAssocValue),
        ("testIsEnumWithEmptyEnum", testIsEnumWithEmptyEnum),
        ("testIsEnumWithRawValue", testIsEnumWithRawValue),
        ("testIsNotEnum", testIsNotEnum),
        ("testStubEnum", testStubEnum),
        ("testStubGenericEnum", testStubGenericEnum),
        ("testStubNoCasesEnum", testStubNoCasesEnum),
        ("testStubNotEnum", testStubNotEnum),
        ("testStubPayloadEnum", testStubPayloadEnum),
        ("testStubRawValueEnum", testStubRawValueEnum),
    ]
}

extension InjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InjectorTests = [
        ("testLetInjection", testLetInjection),
        ("testUnsupportedInjection", testUnsupportedInjection),
        ("testVarInjection", testVarInjection),
    ]
}

extension StubKeyedDecodingContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StubKeyedDecodingContainerTests = [
        ("testDecodeDecodableProperty", testDecodeDecodableProperty),
        ("testDecodeEmpty", testDecodeEmpty),
        ("testDecodeOptional", testDecodeOptional),
        ("testDecodeRecursiveStructure", testDecodeRecursiveStructure),
        ("testDecodeStubbableProperty", testDecodeStubbableProperty),
        ("testDecodeUndecodableEnum", testDecodeUndecodableEnum),
        ("testNestedContainer", testNestedContainer),
        ("testNestedUnkeyedContainer", testNestedUnkeyedContainer),
        ("testSuperDecoder", testSuperDecoder),
        ("testSuperDecoderWithKey", testSuperDecoderWithKey),
    ]
}

extension StubKitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StubKitTests = [
        ("testSetConfig", testSetConfig),
    ]
}

extension StubSingleValueDecodingContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StubSingleValueDecodingContainerTests = [
        ("testDecodeDecodable", testDecodeDecodable),
        ("testDecodeDirectResursiveSingleValue", testDecodeDirectResursiveSingleValue),
        ("testDecodeIndirectRecursiveSingleValue", testDecodeIndirectRecursiveSingleValue),
        ("testDecodeOptional", testDecodeOptional),
        ("testDecodeStubbable", testDecodeStubbable),
        ("testDecodeUndecodableEnum", testDecodeUndecodableEnum),
    ]
}

extension StubUnkeyedDecodingContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StubUnkeyedDecodingContainerTests = [
        ("testDecodeNotStubbable", testDecodeNotStubbable),
        ("testDecodeOptionalProperty", testDecodeOptionalProperty),
        ("testDecodeStubbable", testDecodeStubbable),
        ("testDecodeUndecodableEnum", testDecodeUndecodableEnum),
        ("testNestedContainer", testNestedContainer),
        ("testNestedUnkeyedContainer", testNestedUnkeyedContainer),
        ("testSuperDecoder", testSuperDecoder),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(EnumStubTests.__allTests__EnumStubTests),
        testCase(InjectorTests.__allTests__InjectorTests),
        testCase(StubKeyedDecodingContainerTests.__allTests__StubKeyedDecodingContainerTests),
        testCase(StubKitTests.__allTests__StubKitTests),
        testCase(StubSingleValueDecodingContainerTests.__allTests__StubSingleValueDecodingContainerTests),
        testCase(StubUnkeyedDecodingContainerTests.__allTests__StubUnkeyedDecodingContainerTests),
    ]
}
#endif
